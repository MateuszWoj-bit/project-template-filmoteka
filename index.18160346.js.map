{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,0BAIA,MAAMC,EAAYC,SAASC,cAAc,gBAGzC,IAAIC,EAAc,EACdC,EAAa,EACjBC,QAAQC,IAAI,QACZ,MAAMC,EAAsBC,MAAMC,UACTX,EAAAY,QAAMC,IAAI,mDAAoD,CACnFC,OAAQ,CACNC,QARU,mCASVJ,KAAMA,MAGMK,KAGlB,SAASC,EAAYC,GACnB,MAAMC,EAAOD,EACVE,KAAIC,GACI,oEAEqBA,EAAMC,+BAA+BD,EAAME,kBACrEF,EAAMC,WAENE,MAAMC,OAAOC,SAASL,EAAMM,eACxB,eACAF,OAAOC,SAASL,EAAMM,sDACaN,EAAMO,+FAGpCP,EAAMC,iFAGLD,EAAMQ,UAAUT,KAAIU,IAAW,EAAAC,EAAAC,qBAAoBF,KAAUG,KAAK,WAC5ET,MAAMC,OAAOC,SAASL,EAAMM,eACxB,eACAF,OAAOC,SAASL,EAAMM,mEAM7BM,KAAK,IACR/B,EAAUgC,UAAYf,EAAKgB,WACzB,sCACA,2FAEJ,CAEA,MAAMC,EAAa,IAAIC,EAAAC,GAAJ,CAAenC,SAASoC,eAAe,4BAA6B,CACrFC,WAAYlC,EACZmC,aAAc,GACdC,aAAc,EACd/B,KAAMN,EACNsC,aAAa,EAEbC,SAAU,CACRjC,KAAM,gDACNkC,YAAa,iEACbC,aAAc,6DACdC,WACE,mGAGFC,mBACE,gHAGFC,WACE,uGAeNb,EAAWc,GAAG,aAAaxC,eAAgByC,GACzC5C,QAAQC,IAAI,iBAAiB2C,EAAUxC,QACvCN,EAAc8C,EAAUxC,KACxBJ,QAAQC,IAAI,eAAgBH,GAC5B,MAAM+C,QAAiB3C,EAAoBJ,GAC3CC,EAAa8C,EAASC,cACtB9C,QAAQC,IAAI,cAAeF,GAC3BW,EAAYmC,EAASE,QACvB,IAGA7C,EAAoBJ,GAAakD,MAAKH,IACpC9C,EAAa8C,EAASC,cACtBjB,EAAWoB,MAAMlD,GACjBC,QAAQC,IAAI4C,GACZnC,EAAYmC,EAASE,SACrB/C,QAAQC,IAAI,eAAgBH,EAAA","sources":["src/js/card.js"],"sourcesContent":["import axios from 'axios';\nimport Pagination from 'tui-pagination';\nimport { idToGenereTranslate } from './helpers';\n\nconst listFilms = document.querySelector('.movies-list');\nconst API_KEY = '4e9fa3fc2487236fdff94602c5bb9552';\n\nlet currentPage = 1;\nlet totalItems = 0;\nconsole.log('dupa');\nconst fetchTrendingMovies = async page => {\n  const response = await axios.get(`https://api.themoviedb.org/3/trending/movie/week`, {\n    params: {\n      api_key: API_KEY,\n      page: page,\n    },\n  });\n  return response.data;\n};\n\nfunction renderFilms(images) {\n  const card = images\n    .map(image => {\n      return `\n      <li class=\"movie-item\">\n        <img class=\"boxID\" alt=\"${image.title} movie poster\" movieID=${image.id} movieTitle=\"${\n        image.title\n      } | ${\n        isNaN(Number.parseInt(image.release_date))\n          ? 'No year info'\n          : Number.parseInt(image.release_date)\n      }\" src=\"https://image.tmdb.org/t/p/w500${image.poster_path}\"\n        <div class=\"info\">\n          <p class=\"info__title\">\n            <b>${image.title}</b>\n          </p>\n          <p class=\"info__genre\">\n            <b> ${image.genre_ids.map(element => idToGenereTranslate(element)).join(`, `)} | ${\n        isNaN(Number.parseInt(image.release_date))\n          ? 'No year info'\n          : Number.parseInt(image.release_date)\n      }\n          </b></p>\n        </div>\n      </li>`;\n    })\n    .join('');\n  listFilms.innerHTML = card.replaceAll(\n    'https://image.tmdb.org/t/p/w500null',\n    'https://mateuszwoj-bit.github.io/GOIT-team-project-ice/squoosh-how1-desktop.b9f13a59.png',\n  );\n}\n\nconst pagination = new Pagination(document.getElementById('tui-pagination-container'), {\n  totalItems: totalItems,\n  itemsPerPage: 20,\n  visiblePages: 5,\n  page: currentPage,\n  centerAlign: false,\n\n  template: {\n    page: '<a href=\"#\" class=\"tui-page-btn\">{{page}}</a>',\n    currentPage: '<strong class=\"tui-page-btn tui-is-selected\">{{page}}</strong>',\n    disabledPage: '<span class=\"tui-page-btn tui-is-disabled\">{{page}}</span>',\n    moveButton:\n      '<a href=\"#\" class=\"tui-page-btn tui-{{type}}\">' +\n      '<span class=\"tui-ico-{{type}}\">{{type}}</span>' +\n      '</a>',\n    disabledMoveButton:\n      '<span class=\"tui-page-btn tui-is-disabled tui-{{type}}\">' +\n      '<span class=\"tui-ico-{{type}}\">{{type}}</span>' +\n      '</span>',\n    moreButton:\n      '<a href=\"#\" class=\"tui-page-btn tui-{{type}}-is-ellip\">' +\n      '<span class=\"tui-ico-ellip\">...</span>' +\n      '</a>',\n  },\n  // onPageMove: async function (event, page) {\n  //   currentPage = page;\n  //   console.log('currentPage:', currentPage); // check that currentPage is being updated correctly\n  //   const response = await fetchTrendingMovies(currentPage);\n  //   totalItems = response.total_results;\n  //   console.log('totalItems:', totalItems); // check that totalItems is being updated correctly\n  //   renderFilms(response.results);\n  //   pagination.reset(totalItems);\n  // },\n});\n\npagination.on('afterMove', async function (eventData) {\n  console.log(`Page moved to ${eventData.page}`);\n  currentPage = eventData.page;\n  console.log('currentPage:', currentPage); // check that currentPage is being updated correctly\n  const response = await fetchTrendingMovies(currentPage);\n  totalItems = response.total_results;\n  console.log('totalItems:', totalItems); // check that totalItems is being updated correctly\n  renderFilms(response.results);\n});\n\n// initial load\nfetchTrendingMovies(currentPage).then(response => {\n  totalItems = response.total_results;\n  pagination.reset(totalItems);\n  console.log(response);\n  renderFilms(response.results);\n  console.log('currentPage:', currentPage);\n});\n"],"names":["$fmRoT","parcelRequire","$8a283903e309f4ee$var$listFilms","document","querySelector","$8a283903e309f4ee$var$currentPage","$8a283903e309f4ee$var$totalItems","console","log","$8a283903e309f4ee$var$fetchTrendingMovies","async","page","default","get","params","api_key","data","$8a283903e309f4ee$var$renderFilms","images","card","map","image","title","id","isNaN","Number","parseInt","release_date","poster_path","genre_ids","element","$ge6e3","idToGenereTranslate","join","innerHTML","replaceAll","$8a283903e309f4ee$var$pagination","$parcel$interopDefault","$9B81a","getElementById","totalItems","itemsPerPage","visiblePages","centerAlign","template","currentPage","disabledPage","moveButton","disabledMoveButton","moreButton","on","eventData","response","total_results","results","then","reset"],"version":3,"file":"index.18160346.js.map"}